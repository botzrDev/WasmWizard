version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wasmwiz
      POSTGRES_USER: wasmwiz
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-wasmwiz_secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wasmwiz -d wasmwiz"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  wasmwiz:
    build: .
    environment:
      # Database configuration
      DATABASE_URL: postgresql://wasmwiz:${POSTGRES_PASSWORD:-wasmwiz_secure_password_change_me}@postgres:5432/wasmwiz
      REDIS_URL: redis://redis:6379
      
      # Server configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      ENVIRONMENT: ${ENVIRONMENT:-production}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      RUST_LOG: ${RUST_LOG:-info,wasmwiz=info}
      
      # Security
      API_SALT: ${API_SALT:-please-set-a-secure-api-salt-in-production}
      
      # Resource limits
      WASM_TEMP_DIR: /tmp/wasm_modules
      MAX_WASM_SIZE: ${MAX_WASM_SIZE:-10485760}
      MAX_INPUT_SIZE: ${MAX_INPUT_SIZE:-1048576}
      EXECUTION_TIMEOUT: ${EXECUTION_TIMEOUT:-5}
      MEMORY_LIMIT: ${MEMORY_LIMIT:-134217728}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - wasm_temp:/tmp/wasm_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  wasm_temp:
