apiVersion: apps/v1
kind: Deployment
metadata:
  name: wasmwiz
  labels:
    app: wasmwiz
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: wasmwiz
  template:
    metadata:
      labels:
        app: wasmwiz
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      # Enhanced security context for pod-level security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: [1001]
      containers:
      - name: wasmwiz
        image: wasmwiz:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: wasmwiz-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: wasmwiz-secrets
              key: redis-url
        - name: API_SALT
          valueFrom:
            secretKeyRef:
              name: wasmwiz-secrets
              key: api-salt
        - name: MAX_WASM_SIZE
          value: "10485760"
        - name: MAX_INPUT_SIZE
          value: "1048576"
        - name: EXECUTION_TIMEOUT
          value: "5"
        - name: MEMORY_LIMIT
          value: "134217728"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: wasm-temp
          mountPath: /app/wasm_modules
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
            - NET_RAW
            - SYS_ADMIN
          seccompProfile:
            type: RuntimeDefault
          procMount: Default
      volumes:
      - name: wasm-temp
        emptyDir:
          sizeLimit: "1Gi"
          medium: Memory  # Use memory-backed storage for performance
      - name: tmp
        emptyDir:
          sizeLimit: "100Mi"  # Minimal tmp for system operations
      restartPolicy: Always
      # Network policies and service account
      serviceAccountName: wasmwiz-sa
      automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  name: wasmwiz-service
  labels:
    app: wasmwiz
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: wasmwiz
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wasmwiz-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';";
    # SSL configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256"
spec:
  tls:
  - hosts:
    - wasmwiz.example.com
    secretName: wasmwiz-tls
  rules:
  - host: wasmwiz.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wasmwiz-service
            port:
              number: 80