services:
  # PostgreSQL database for development (Port 7432)
  postgres_dev:
    image: postgres:15
    container_name: wasm-wizard_dev_postgres
    environment:
      POSTGRES_DB: wasm-wizard_dev
      POSTGRES_USER: wasm-wizard
      POSTGRES_PASSWORD: wasm-wizard
    ports:
      - "7432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount init scripts if needed
      - ./scripts/init-dev-db.sql:/docker-entrypoint-initdb.d/init-dev-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wasm-wizard -d wasm-wizard_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for rate limiting (Port 7379)
  redis_dev:
    image: redis:7-alpine
    container_name: wasm-wizard_dev_redis
    ports:
      - "7379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # pgAdmin for database management (Port 7050)
  pgadmin_dev:
    image: dpage/pgadmin4:latest
    container_name: wasm-wizard_dev_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@wasm-wizard.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "7050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      postgres_dev:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - admin  # Optional: start with docker-compose --profile admin up

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  default:
    name: wasm-wizard_dev_network
